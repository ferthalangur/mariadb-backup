#!/bin/bash
#
# Script to run mariabackup on regular basis from cron.hourly
#
# Assumptions: 
# - username and password is available in
#   /etc/my.cnf.d/mariabackup.cnf ... putting it on the command line
#   is worse for security than putting it in a file owned and readable
#   only by the root user.
# Version:
#    1.0.1
# Source:
#    https://github.com/ferthalangur/maria_db_backup
# License: 
#    GPL v.3 - See bottom of file.
###########################################################################

MADBB_CONFIG_FILE="/etc/default/mariadb-backup"

if [ -r "${MADBB_CONFIG_FILE}" ]
then
    source "${MADBB_CONFIG_FILE}"
fi

# Defaults, if not set by the defaults file:
MADBB_HOURS="${MADBB_HOURS:-06 12 18}"
MADBB_PROG="${MADBB_PROG:-/bin/mariabackup}"
MADBB_OPTIONS="${MADBB_OPTIONS:---binloginfo=AUTO}"
MADBB_BACKUP_DIR="${MADBB_BACKUP_DIR:-/usr/local/backup/mariadb-backup}"
MADBB_PRUNE_DAILY="${MADBB_PRUNE_DAILY:-1}"
MADBB_PRUNE_HOUR="${MADBB_PRUNE_HOUR:-18}"
MADBB_SAVE_DAYS="${MADBB_SAVE_DAYS:-10}"
MADBB_DEBUG="${MADBB_DEBUG:-0}"

#
# Runs mariabackup - parameter passed is the directory where the output should go.
# 
function run_backup ()
{
    local targetdir="$1"
    local backup_cmd

    backup_cmd="${MADBB_PROG} --backup --target-dir ${targetdir} ${MADBB_OPTIONS}"

    mkdir -p "${targetdir}"

    if [ "${MADBB_DEBUG}" -eq "1" ]
    then
	debug_dump "${backup_cmd}"
    fi
    
    ${backup_cmd}

    return 0
}

# Prune backup directories.
# Parameters:
#     $1 - days_to_keep : How many days should be saved
#     $2 - directory : Directory that contains the backups
#
function prune_backups ()
{
    local days_to_keep="$1"
    local directory="$2"
    local backup_count

    if [ ${days_to_keep} -le 0 ]; then return; fi
    
    pushd "${directory}"
    backup_count="$(ls | wc -l)"
    if [ ${backup_count} -gt ${days_to_keep} ]; then
	ls | head -n-${days_to_keep} | xargs -n1 -I'{}' rm -rf '{}'
    fi
    popd
}

#
# Dumps the command about to be run and the
# environment current values
#
function debug_dump ()
{
    local command="$1"
    echo "DEBUG: Environment variables: "
    set | egrep '^MADBB'
    echo "DEBUG: Command to be run: ${command}"
}

if [ ! -x "${MADBB_PROG}" ]
then
    echo "Error: unable to execute ${MADBB_PROG}"
    exit 1
fi

if [ ! -d "${MADBB_BACKUP_DIR}" ]
then
    echo "Error: directory ${MADBB_BACKUP_DIR}"
    exit 1
fi

datestamp=$(date "+%Y%m%d")
timestamp=$(date "+%H%M%S")
current_hour=$(date "+%H")
backup_dir="${MADBB_BACKUP_DIR}/${datestamp}/${timestamp}"

for hour in ${MADBB_HOURS}
do
    if [ "${hour}" -eq "${current_hour}" ]
    then
	run_backup "${backup_dir}"
    fi
done

# Prune old backups once daily
if [ "${current_hour}" -eq "${MADBB_PRUNE_HOUR}" ]
then
    prune_backups "${MADBB_SAVE_DAYS}" "${MADBB_BACKUP_DIR}"
fi

###########################################################################
#   Copyright (C) 2018-2021 Robert Bryan Jenson ... rbj.(at).spotch.com
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
